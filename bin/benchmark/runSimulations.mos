// define the sets to be analyzed
names = {"AC_InHomeGrid", "AC_InHomeGridN", "AC_IEEE34_GridN"};
methods = {"Radau", "Dassl"};
endTimes = {3600, 7200, 21600, 43200, 84600, 423000, 846000};
tolerances = {1e-4, 1e-5, 1e-6};

// Set simulation preferences
Evaluate:=true;
OutputCPUtime:=true;
experimentSetupOutput(equdistant=false, events=false);

// Create the result matrix
dataTraj = ones(size(methods,1)*size(endTimes,1)*size(tolerances,1)*size(names,1), 5);

index = 1;
for n in 1:size(names,1) loop
    
    modelName = "Buildings.Electrical.AC.ThreePhasesUnbalanced.Lines.Examples."+names[n];
    
    // Translate the model
    translateModel(modelName);

    for i in 1:size(methods,1) loop
        for j in  1:size(endTimes,1) loop
            for k in 1:size(tolerances,1) loop
                simulateModel(modelName, stopTime=84600, method=methods[i], tolerance=1e-06, resultFile=names[n]);

                N = readTrajectorySize(names[n]+".mat");
                cpuTime = readTrajectory(names[n]+".mat", {"CPUtime"}, N);
                
                dataTraj[index,1] = cpuTime[1,end];
                dataTraj[index,2] = i;
                dataTraj[index,3] = j;
                dataTraj[index,4] = k;
                dataTraj[index,5] = n;
                
                index = index + 1;
                
            end for;
        end for;
    end for;
end for;

DataFiles.writeCSVmatrix("benchmark.csv", {"CPUtime", "method", "endTime", "tolerance", "model"}, dataTraj, ",");
